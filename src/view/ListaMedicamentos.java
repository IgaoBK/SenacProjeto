/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MedicamentoVO;
import services.MedicamentoServicos;

/**
 *
 * @author FNACPOA
 */
public class ListaMedicamentos extends javax.swing.JFrame {

    /**
     * Creates new form ListaMedicamentos
     */
    public ListaMedicamentos() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtListaMed = new javax.swing.JTable();
        jbConfirmar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbAdcionarMed = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbDeletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtListaMed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Medicamento", "Nome Medicamento", "Sobre O Medicamento", "Contraindicações", "Números Cas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtListaMed);

        jbConfirmar.setText("Confirmar");
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar/Sair");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbAdcionarMed.setText("Adicionar/Editar Medicamento");
        jbAdcionarMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdcionarMedActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbDeletar.setText("Deletar");
        jbDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jbConfirmar)
                        .addGap(18, 18, 18)
                        .addComponent(jbCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(jbAdcionarMed))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jbSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(jbDeletar)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar)
                    .addComponent(jbDeletar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConfirmar)
                    .addComponent(jbCancelar)
                    .addComponent(jbAdcionarMed))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void jbAdcionarMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdcionarMedActionPerformed
        // TODO add your handling code here:
        jfCadastroMedicamentos.getFrames();
        this.hide();
    }//GEN-LAST:event_jbAdcionarMedActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletarActionPerformed
        // TODO add your handling code here:
        this.deletar();
    }//GEN-LAST:event_jbDeletarActionPerformed

    
    public void addLinhaParaTabela(String pesq) throws SQLException{
    DefaultTableModel model = (DefaultTableModel) jtListaMed.getModel();
    model.getDataVector().removeAllElements();
    model.fireTableDataChanged();
    Object rowData[] = new Object[5];//define vetor das colunas
    MedicamentoServicos uis = services.ServicosFactory.getMedicamentoServicos();
    for (MedicamentoVO uVO: uis.buscarNomeMed(pesq)) {
      rowData[0] = uVO.getIdMed();
      rowData[1] = uVO.getMedicamento();
      rowData[2] = uVO.getSobre();
      rowData[3] = uVO.getContraindicacao();
      rowData[4] = uVO.getNumeroCas();
      model.addRow(rowData);
    }
    }
    
    
    
    public void deletar() {
        try {
            //busca linha que usuario clicou.
            int linha = jtListaMed.getSelectedRow();
            if (linha == -1) {
                JOptionPane.showMessageDialog(rootPane, "Você não selecionou nenhuma linha");
            } else {
                MedicamentoServicos clis = services.ServicosFactory.getMedicamentoServicos();
                String pesq = null;
                //busca o idMeds da linha selecionada. o zero indica que vamos buscar o valor da primeira coluna
                int idMeds = (int) jtListaMed.getValueAt(linha, 0);
                clis.deletarMedicamento(idMeds);
                JOptionPane.showMessageDialog(rootPane, "Cliente Deletado com Sucesso");
                this.addLinhaParaTabela(pesq);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Problema Ao Tentar Deletar Medicamento" + ex.getMessage());
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MedicamentoVO mVO = new MedicamentoVO();
                try {
                    if(mVO.getIdMed() ==1){
                        new ListaMedicamentos().setVisible(true);
                    }else{
                        new ListaMedicamentos().setVisible(false);
                    }
                        
                } catch (SQLException ex) {
                    Logger.getLogger(ListaMedicamentos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdcionarMed;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbDeletar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTable jtListaMed;
    // End of variables declaration//GEN-END:variables
}
